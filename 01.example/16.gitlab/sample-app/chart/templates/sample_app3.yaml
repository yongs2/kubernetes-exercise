apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-app3
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-app3
    app.kubernetes.io/instance: {{ .Release.Name }}-app3
    app.kubernetes.io/version: 1.0.0
    service: {{ .Release.Name }}-app3
spec:
  type: ClusterIP
  ports:
  - port: 8082
    name: {{ .Release.Name }}-app3
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-app3
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app3-{{ .Values.deploy.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-app3
    app.kubernetes.io/instance: {{ .Release.Name }}-app3
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    version: {{ .Chart.AppVersion }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-app3
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-app3
        app.kubernetes.io/instance: {{ .Release.Name }}-app3
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        version: {{ .Chart.AppVersion }}
    spec:
      containers:
      - name: {{ .Release.Name }}-app3
        image: "{{ .Values.tm.image }}:{{ .Chart.AppVersion }}"
        ports:
        - containerPort: 8082
        imagePullPolicy: Always
        env:
        - name: HOST_IP
          value: "{{ .Release.Name }}-app3"
        - name: REDIS_ADDRS
          value: {{ .Values.common.redis.addrs | quote }}
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Asia/Seoul
      imagePullSecrets:
        - name: regcred
