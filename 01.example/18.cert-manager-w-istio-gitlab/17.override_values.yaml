# Refer
# https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/examples/values-gke-minimum.yaml
# https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/examples/values-minikube-minimum.yaml
#
global:
  edition: ce
  hosts:
    domain: 192-168-5-81.nip.io
    externalIP: 192.168.5.81
  # Disable Rails bootsnap cache (temporary)
  rails:
    bootsnap:
      enabled: false
  ingress:
    enabled: false
    configureCertmanager: false
    class: "nginx"
# Don't use certmanager, we'll self-sign
certmanager-issuer:
  email: "admin@example.com"
certmanager:
  install: false
# Use the `ingress` addon, not our Ingress (can't map 22/80/443)
nginx-ingress:
  enabled: false
# Save resources, only 3 CPU
prometheus:
  install: false
gitlab-runner:
  install: true
  certsSecretName: selfsigned-cert-domain
  runners:
    config: |
      [[runners]]
        [runners.kubernetes]
          image = "ubuntu:18.04"
          dns_policy = "none"
        [runners.kubernetes.dns_config]
          nameservers = ["8.8.8.8" ]
        [[runners.kubernetes.volumes.config_map]]
          name = "docker-daemon"
          mount_path = "/etc/docker/daemon.json"
          sub_path = "daemon.json"
        [[runners.kubernetes.volumes.host_path]]
          name = "var-run-docker-sock"
          mount_path = "/var/run/docker.sock"
          read_only = false
          host_path = "/var/run/docker.sock"
        [[runners.kubernetes.host_aliases]]
          ip = "192.168.1.2"
          hostnames = [ "gitlab.myhost.com"]
        [[runners.kubernetes.host_aliases]]
          ip = "192.168.1.3"
          hostnames = [ "gitlab2.myhost.com"]
        

# Reduce replica counts, reducing CPU & memory requirements
gitlab:
  webservice:
    minReplicas: 1
    maxReplicas: 1
  sidekiq:
    minReplicas: 1
    maxReplicas: 1
  gitlab-shell:
    minReplicas: 1
    maxReplicas: 1
    # Map gitlab-shell to a high-numbered NodePort to support cloning over SSH since
    # Minikube takes port 22.
    #service:
    #  type: NodePort
    #  nodePort: 32022
  gitaly:
    persistence:
      storageClass: ${STORAGE_CLASS}
      size: 50Gi
registry:
  hpa:
    minReplicas: 1
    maxReplicas: 1
postgresql:
  persistence:
    storageClass: ${STORAGE_CLASS}
    size: 8Gi
minio:
  persistence:
    storageClass: ${STORAGE_CLASS}
    size: 10Gi
redis:
  master:
    persistence:
      storageClass: ${STORAGE_CLASS}
      size: 5Gi
